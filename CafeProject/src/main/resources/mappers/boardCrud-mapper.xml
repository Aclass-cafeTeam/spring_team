<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardCrudMapper">

	<!-- Board resultMap -->
	<resultMap type="Board" id="board_rm">
		  <id property="boardNo" column="BOARD_NO"/>
		  <id property="boardName" column="BOARD_NAME"/>
		  <id property="boardCode" column="BOARD_CODE"/>
      <result property="boardTitle" column="BOARD_TITLE"/>
      <result property="boardContent" column="BOARD_CONTENT"/>
      <result property="boardCreateDate" column="B_CREATE_DATE"/>
      <result property="boardUpdateDate" column="B_UPDATE_DATE"/>   
      <result property="titleTagNo" column="TITLE_TAG_NO"/>
      <result property="titleTagName" column="TITLE_TAG_NAME"/>
      <result property="writingFormNo" column="WRITING_FORM_NO"/>
      <result property="writingFormName" column="WRITING_FORM_NAME"/>
      <result property="writingFormContent" column="WRITING_FORM_CONTENT"/>
      <result property="noticeFlag" column="NOTICE_FL"/>
      <result property="tempCount" column="TEMP_COUNT"/>

<!--  			<collection property="imageList" 
      						javaType="java.util.ArrayList"
      						ofType ="BoardImage"
      						select="selectImageList"
      						column="BOARD_NO" /> -->
    
	</resultMap>
	
	      
 	<!-- BoardImage resultMap -->
  <resultMap type="BoardImage" id="boardImage_rm">
     <id property="imageNo" column="IMG_NO"/>
     <result property="imagePath" column="IMG_PATH"/>
     <result property="imageReName" column="IMG_RENAME"/>
     <result property="boardNo" column="BOARD_NO"/>     
  </resultMap> 
   

	
	<!-- 말머리 목록 조회 -->
	<select id="selectTitleTag" resultType="map">
		SELECT * FROM TITLE_TAG ORDER BY 1
	</select>
	

	
 		<!--  useGeneratedKeys 속성 : DB 내부적으로 생성한 키(시퀀스 등)
 				useGeneratedKeys="true" : JDBC getGeneratedKeys()메서드 사용 허용 ** 필수 사용
	
				* 마이바티스의 동적 SQL *
				- SQL구문에 작성되는 태그로 프로그램 수행 중 추가적인 SQL 수행 및 SQL 형태 변형 가능 		
					(마이바티스 기능 중 가장 강력한 기능)
					
				* 동적 SQL의 <selectKey>
				<selectKey> : INSERT/UPDATE에 사용된 키를 원하는 변수/필드에 담아서 반환하는 태그
				
				keyProperty : key를 담을 변수를 지정하는 속성
				
				order	: 메인 SQL이 수행되기 전(BEFOR) 또는 후(AFTER)에 <selectKey>의 SQL이 수행되도록 순서를 지정
 		-->
 		
 		
 		<!-- 게시글 작성 -->
 		<!-- 게시글 작성의 성공/실패 result를 반환하는 것이 아닌, 새로 삽입된 boardNo 반환 -->
 		<insert id="writeBoard" parameterType="Board" useGeneratedKeys="true">
 			<selectKey keyProperty="boardNo" resultType="_int" order="BEFORE">
 				SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
 			</selectKey>
 			INSERT INTO BOARD 
			VALUES (#{boardNo}, #{boardTitle}, #{boardContent}, 
							DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT,
							<if test="noticeFlag == null">
							DEFAULT
							</if>
							<if test="noticeFlag != null">
							#{noticeFlag}
							</if>
							,#{memberNo}, #{boardCode}, #{titleTagNo})
 		</insert>
 		
 		
 		
 		<!-- 게시글 삭제 -->
 		<update id="deleteBoard">
 			UPDATE BOARD SET BOARD_DEL_FL = 'Y' 
			WHERE BOARD_NO = #{boardNo}
 		</update>
 		
 		
 		<!-- 게시글 상세 조회(수정) -->
		<select id="boardDetail" resultMap="board_rm">
			SELECT BOARD_CODE, BOARD_NO, BOARD_NAME, TITLE_TAG_NO, TITLE_TAG_NAME, BOARD_TITLE, BOARD_CONTENT
			FROM BOARD 
			JOIN TITLE_TAG USING (TITLE_TAG_NO)
			JOIN BOARD_TYPE USING (BOARD_CODE)
			WHERE BOARD_NO = #{boardNo}
			AND BOARD_DEL_FL IN ('N','T')
		</select>
 		
 		
 		<!-- 임시등록(INSERT) -->
 		<insert id="tempPost" parameterType="Board" useGeneratedKeys="true">
 			<selectKey keyProperty="boardNo" resultType="_int" order="BEFORE">
 				SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
 			</selectKey>
 			INSERT INTO BOARD 
			VALUES (#{boardNo}, #{boardTitle}, #{boardContent}, 
							DEFAULT, DEFAULT, DEFAULT, DEFAULT, 'T',
							<if test="noticeFlag == null">
							DEFAULT
							</if>
							<if test="noticeFlag != null">
							#{noticeFlag}
							</if>
							, #{memberNo}, #{boardCode}, #{titleTagNo})
 		</insert>
 			
 			
 		<!-- 임시등록 조회-->
 		<select id="selectTempPost" resultMap="board_rm">
 			SELECT BOARD_CODE, BOARD_NO, BOARD_NAME, TITLE_TAG_NO, TITLE_TAG_NAME, BOARD_TITLE, BOARD_CONTENT,
 			TO_CHAR(B_CREATE_DATE, 'YYYY.MM.DD HH24:MI') B_CREATE_DATE,
 			(SELECT COUNT(*) FROM BOARD WHERE MEMBER_NO = #{memberNo} AND BOARD_DEL_FL = 'T') TEMP_COUNT
			FROM BOARD 
			JOIN TITLE_TAG USING (TITLE_TAG_NO)
			JOIN BOARD_TYPE USING (BOARD_CODE)
			WHERE MEMBER_NO = #{memberNo}
			AND BOARD_DEL_FL = 'T'
 		</select>
 		
 		
 		
 		<!-- 임시등록 전체 삭제 -->
 		<update id="deleteTempAll">
	 		UPDATE BOARD 
			SET BOARD_DEL_FL = 'Y'
			WHERE MEMBER_NO = #{memberNo}
			AND BOARD_DEL_FL = 'T'
 		</update>
 			
 			
 		<!-- 게시글 첨부 이미지 삽입(리스트 형식)  -->
		<insert id="insertBoardImageList">
		INSERT INTO BOARD_IMG
			SELECT SEQ_IMG_NO.NEXTVAL IMG_NO, A.* FROM 
			<foreach collection="list" item="img" open="(" close=") A" separator="UNION ALL">
				SELECT	#{img.imagePath} IMG_PATH,
								#{img.imageRename} IMG_RENAME,
								#{img.boardNo} BOARD_NO
								FROM DUAL
			</foreach>
		</insert> 			
 		

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardDetailMapper">

	<!-- Board resultMap -->
	<resultMap type="Board" id="board_rm">
		  <id property="boardNo" column="BOARD_NO"/>
      <result property="boardTitle" column="BOARD_TITLE"/>
      <result property="boardContent" column="BOARD_CONTENT"/>
      <result property="boardCreateDate" column="B_CREATE_DATE"/>
      <result property="boardUpdateDate" column="B_UPDATE_DATE"/>
      <result property="likeCount" column="LIKE_COUNT"/>
      <result property="readCount" column="READ_COUNT"/>
      <result property="commentCount" column="COMMENT_COUNT"/>
      <result property="memberNo" column="MEMBER_NO"/>
      <result property="memberNickname" column="MEMBER_NICKNAME"/>
      <result property="profileImage" column="PROFILE_IMG"/>
      <result property="memberLevelName" column="MEMBER_LEVEL_NAME"/>   
      <result property="memberLevelImage" column="MEMBER_LEVEL_IMG"/>
      <result property="titleTagNo" column="TITLE_TAG_NO"/>
      <result property="titleTagName" column="TITLE_TAG_NAME"/>
      <result property="commentFlag" column="COMMENT_FL"/>
						
     <collection property="commentList" 
      						javaType="java.util.ArrayList"
      						ofType ="Comment"
      						select="selectCommentList"
      						column="BOARD_NO"/>			
	</resultMap>
   
   <!-- Comment resultMap -->
		<resultMap type="Comment" id="comment_rm">
      <id property="commentNo" column="COMMENT_NO"/>
      <result property="commentContent" column="COMMENT_CONTENT"/>
      <result property="commentCreateDate" column="C_CREATE_DATE"/>
      <result property="commentDeleteDate" column="C_DELETE_DATE"/>
      <result property="boardNo" column="BOARD_NO"/>
      <result property="memberNo" column="MEMBER_NO"/>
      <result property="commentDeleteFlag" column="COMMENT_DEL_FL"/>
      <result property="parentNo" column="PARENT_NO"/>
      <result property="memberNickname" column="MEMBER_NICKNAME"/>
      <result property="profileImage" column="PROFILE_IMG"/>
      <result property="memberLevelImage" column="MEMBER_LEVEL_IMG"/>
   </resultMap>
   
      <!-- BoardType resultMap -->
		<resultMap type="BoardType" id="boardType_rm">
      <id property="boardCode" column="BOARD_CODE"/>
      <result property="boardName" column="BOARD_NAME"/>
      <result property="titleTagFlag" column="TITLE_TAG_YN"/>
      <result property="boardForm" column="BOARD_FORM"/>
      <result property="boardLikeFlag" column="BOARD_LIKE_YN"/>
      <result property="memberLevelNo" column="MEMBER_LEVEL_NO"/>
      <result property="memberLevelName" column="MEMBER_LEVEL_NAME"/>
    </resultMap>
 
	<!-- 특정 게시판 정보(등급제한) 조회 -->
	<select id="boardInfo" parameterType="_int" resultMap="boardType_rm">
	SELECT BOARD_CODE, BOARD_NAME, TITLE_TAG_YN, BOARD_FORM, BOARD_LIKE_YN, MEMBER_LEVEL_NO, MEMBER_LEVEL_NAME
	FROM BOARD_TYPE
	JOIN MEMBER_LEVEL USING(MEMBER_LEVEL_NO)
	WHERE BOARD_CODE = #{boardCode}
	</select>
 
	<!-- 게시글 상세 조회 -->
	<select id="selectBoardDetail" resultMap="board_rm">
	SELECT BOARD_NO, TITLE_TAG_NO, TITLE_TAG_NAME, BOARD_TITLE, BOARD_CONTENT, READ_COUNT, 
		TO_CHAR(B_CREATE_DATE, 'yyyy.MM.dd. HH24:MI') B_CREATE_DATE,
		TO_CHAR(B_UPDATE_DATE, 'yyyy.MM.dd. HH24:MI') B_UPDATE_DATE,
		MEMBER_NO, MEMBER_LEVEL_NAME, MEMBER_LEVEL_IMG, MEMBER_NICKNAME, PROFILE_IMG,
		(SELECT COUNT(*) FROM "COMMENT" C
		WHERE C.BOARD_NO =B.BOARD_NO AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		(SELECT COUNT(*) FROM BOARD_LIKE L
		 WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT, COMMENT_FL
	FROM BOARD B
	JOIN MEMBER USING(MEMBER_NO)
	LEFT JOIN TITLE_TAG USING(TITLE_TAG_NO)
	LEFT JOIN MEMBER_LEVEL USING(MEMBER_LEVEL_NO)
	WHERE BOARD_NO = #{boardNo}
	AND BOARD_DEL_FL = 'N'
	
	</select>
 <!-- 조회 수 증가 -->
	<select id="updateReadCount">
	UPDATE "BOARD" SET
	READ_COUNT = READ_COUNT +1
	WHERE BOARD_NO = #{boardNo}
	</select>

	<!-- 좋아요 여부 체크 -->
	<select id="boardLikeCheck" resultType="_int">
	SELECT COUNT(*) FROM BOARD_LIKE
	WHERE BOARD_NO = #{boardNo}
	AND MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 좋아요 수 증가 -->
	<insert id="boardLikeUp">
	INSERT INTO BOARD_LIKE
	VALUES (#{boardNo}, #{memberNo})
	</insert>
	
	<!-- 좋아요 수 감소 -->
	<delete id="boardLikeDown">
	DELETE FROM BOARD_LIKE
	WHERE BOARD_NO =#{boardNo}
	AND MEMBER_NO=#{memberNo}
	</delete>
	
	<!-- 특정 게시글의 댓글 목록 조회 -->
	<select id="selectCommentList" resultMap="comment_rm">
	SELECT LEVEL, C.* FROM
		(SELECT COMMENT_NO, COMMENT_CONTENT,
			TO_CHAR(C_CREATE_DATE, 'yyyy.MM.dd. HH24:MI') C_CREATE_DATE,
			TO_CHAR(C_DELETE_DATE, 'yyyy.MM.dd. HH24:MI') C_DELETE_DATE,
			BOARD_NO, MEMBER_NO, PROFILE_IMG,
			PARENT_NO, COMMENT_DEL_FL, MEMBER_LEVEL_IMG, MEMBER_NICKNAME
		FROM "COMMENT"
		JOIN MEMBER USING(MEMBER_NO)
		LEFT JOIN MEMBER_LEVEL USING(MEMBER_LEVEL_NO)
		WHERE BOARD_NO = #{boardNo}) C
	START WITH PARENT_NO IS NULL
	CONNECT BY PRIOR COMMENT_NO = PARENT_NO
	ORDER SIBLINGS BY COMMENT_NO
	</select>
	
</mapper>
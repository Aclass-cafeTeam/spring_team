<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="managerMapper">
	<!-- namespace 속성 : 현재 공간(영역)에 대한 이름 (반드시 지정!) -->
  <!-- <cache-ref namespace=""/> 무조건 삭제-->
  
  
  <!-- resultMap 태그
    - 마이바티스에서 select를 진행하는 경우
    	기본적으로 java 객체 필드명 == ResultSet 컬럼명이 같을 때 
    	자동으로 객체에 세팅이 되는데 
    	
    	다를 경우
    	컬럼 값을 어떤 필드에 세팅할 지를 지정하는 태그 
    	
    	- 속성
    	type : 연결힐 VO 객체의 타입(패키지 + 클래스명 or 별칭) 
    																					myBatis-confing.xml 에서 지정
    																					
    	id : resultMap을 식별할 이름
    	
    	
    	-->
    	<!-- <resultMap type="edu.kh.project.member.model.vo.Member" id="member_rm"> -->
    	<resultMap type="managerMember" id="member_rm">
    	
    		<!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그  -->
    		<id property="memberNo" column="MEMBER_NO"/>
    		
    		<!-- 나머지 일반 컬럼 -->
    		<result property="memberEmail" column="MEMBER_EMAIL" />
	      <result property="memberPw" column="MEMBER_PW" />
	      <result property="memberNickname" column="MEMBER_NICKNAME" />
	      <result property="memberResidence" column="MEMBER_RESIDENCE" />
	      <result property="profileImage" column="PROFILE_IMG" />
	      <result property="enrollDate" column="ENROLL_DATE" />
	      <result property="memberDeleteFlag" column="MEMBER_DEL_FL" />
	      <result property="authorityNo" column="AUTHORITY_NO" />
	      <result property="authorityName" column="AUTHORITY_NAME" />
	      <result property="memberLevelNo" column="MEMBER_LEVEL_NO" />
	      
	      <result property="memberLevelName" column="MEMBER_LEVEL_NAME" />
	      <result property="memberLevelImg" column="MEMBER_LEVEL_IMG" />
	      <result property="authorityImg" column="AUTHORITY_IMG" />
	      <result property="logHistoryNo" column="LOG_HISTORY_NO" />
	      <result property="loginDate" column="LOGIN_DATE" />
	      <result property="logHistoryCount" column="LOGHISTORY_COUNT" />
	      <result property="commentCount" column="BOARD_COUNT" />
	      <result property="boardCount" column="COMMENT_COUNT" />
	      
	      <result property="holdNo" column="HOLD_NO" />
	      <result property="holdDate" column="HOLD_DATE" />
	      <result property="holdReason" column="HOLD_REASON" />
	      <result property="HManagerEmail" column="H_MEMBER_EMAIL" />
	      <result property="HManagerNickname" column="H_MEMBER_NICKNAME" />
    	</resultMap>
    	
    	
<!--     	private int holdNo; // 활동정지 번호
	   private String holdDate; // 활동정지일
	   private String holdReason; // 활동정지 사유
	   private String HManagerEmail; // 활동정지 시킨 매니저아이디 //H_MEMBER_EMAIL
	   private String HManagerNickname; // 활동정지 시킨 매니저아이디 //H_MEMBER_NICKNAME -->
    	
 <!--  private int memberNo;
	private String memberEmail;
	private String memberPw;
	private String memberNickname;
	private String memberResidence;
	private String profileImage;
	private String enrollDate;
	private String memberDeleteFlag;
	private String authorityName;
	private int memberLevelNo; -->
  
  <!-- "MEMBER_NO"   NUMBER      NOT NULL,
   "MEMBER_EMAIL"   VARCHAR2(50)      NOT NULL,
   "MEMBER_PW"   VARCHAR2(100)      NOT NULL,
   "MEMBER_NICKNAME"   VARCHAR2(30)      NOT NULL,
   "MEMBER_RESIDENCE"   VARCHAR2(30)      NULL,
   "PROFILE_IMG"   VARCHAR2(300)      NULL,
   "ENROLL_DATE"   DATE   DEFAULT SYSDATE   NOT NULL,
   "MEMBER_DEL_FL"   CHAR(1)   DEFAULT 'N'   NOT NULL,
   "AUTHORITY_NAME"   CHAR(1)   DEFAULT 'G'   NOT NULL,
   "MEMBER_LEVEL_NO"   NUMBER      NULL -->
  
  <!-- 메인화면에서 멤버 수 불러오기 -->
  <select id="mainMemberCount" resultType="_int">
  	SELECT COUNT(*) TOTALMEMBER FROM "MEMBER"
		WHERE MEMBER_DEL_FL IN ('N','S')
  </select>
  <select id="mainBoardCount" resultType="_int">
  	SELECT COUNT(*) FROM "BOARD" 
  	WHERE BOARD_DEL_FL ='N'
  </select>
  
  <select id="selectMemberList" resultMap="member_rm">
  	SELECT PROFILE_IMG, MEMBER_NICKNAME,
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
	TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
	(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
	(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME 
	,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
	,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
	,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
	,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
	,NVL(BOARD_COUNT,0) BOARD_COUNT
	,NVL(COMMENT_COUNT,0) COMMENT_COUNT
	FROM "MEMBER" m 
	LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
	FROM LOGIN_HISTORY lh
	GROUP BY MEMBER_NO
	ORDER BY 2) USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
	FROM "COMMENT" c 
	GROUP BY MEMBER_NO  
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE  MEMBER_DEL_FL IN ('N','S')
	ORDER BY MEMBER_NICKNAME
  </select>
  
  <select id="memberListCount" resultType="_int">
  	SELECT COUNT(*) FROM "MEMBER" m
	WHERE MEMBER_DEL_FL IN ('N','S')
  </select>
  
  <select id="sortLevelMemberListCount" parameterType="_int" resultType="_int">
  	SELECT COUNT(*) FROM "MEMBER" m
	WHERE MEMBER_DEL_FL IN ('N','S')
	AND MEMBER_LEVEL_NO = #{memberLevelNoResult}
  </select>
  <select id="sortLevelMemberList" parameterType="_int" resultMap="member_rm">
  	SELECT PROFILE_IMG, MEMBER_NICKNAME,
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
	TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
	(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
	(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
	,MEMBER_LEVEL_NO
	,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
	,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
	,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
	,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
	,NVL(BOARD_COUNT,0) BOARD_COUNT
	,NVL(COMMENT_COUNT,0) COMMENT_COUNT
	FROM "MEMBER" m 
	LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
	FROM LOGIN_HISTORY lh
	GROUP BY MEMBER_NO
	ORDER BY 2) USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
	FROM "COMMENT" c 
	GROUP BY MEMBER_NO  
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE  MEMBER_DEL_FL IN ('N','S')
	AND MEMBER_LEVEL_NO = #{memberLevelNo}
	ORDER BY MEMBER_NICKNAME
  </select>
  <!-- 아이디 /별명으로 멤버 검색 -->
  <select id="selectInputMember" parameterType="java.util.HashMap" resultMap="member_rm">
  SELECT PROFILE_IMG, MEMBER_NICKNAME,
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
	TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
	(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
	(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
	,MEMBER_LEVEL_NO
	,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
	,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
	,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
	,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
	,NVL(BOARD_COUNT,0) BOARD_COUNT
	,NVL(COMMENT_COUNT,0) COMMENT_COUNT
	FROM "MEMBER" m 
	LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
	FROM LOGIN_HISTORY lh
	GROUP BY MEMBER_NO
	ORDER BY 2) USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
	FROM "COMMENT" c 
	GROUP BY MEMBER_NO  
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE  MEMBER_DEL_FL IN ('N','S')
	<if test ="srchOption == 0">
	AND SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = #{inputMember}
	</if>
	<if test ="srchOption == 1">
	AND MEMBER_NICKNAME = #{inputMember}
	</if>
  </select>
  
  <!-- 게시글 수에 따라 멤버 상세조회 페이징처리 -->
  <select id="getselectDetailBoardCount" parameterType="java.util.HashMap" resultType="_int">
  	SELECT COUNT(*)
	FROM (SELECT NVL(BOARD_COUNT,0) BOARD_COUNT,MEMBER_NO,MEMBER_LEVEL_NO FROM "MEMBER" m
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	<if test ="periodOption == 1">
		WHERE to_char(B_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
	</if>
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE MEMBER_DEL_FL IN ('N','S'))
	<where>
		<if test ="aboveOption == 1">
			<![CDATA[AND BOARD_COUNT >=]]> #{articleCountInput}
		</if>
		<if test ="aboveOption == 0">
			<![CDATA[AND BOARD_COUNT <=]]> #{articleCountInput}
		</if>
		<if test ="memberLevelNo != 0">
			AND MEMBER_LEVEL_NO = #{memberLevelNo}
		</if>
	</where>
  </select>
  <!-- 게시글 수에 따라 멤버 상세조회 -->
  <select id="getselectDetailBoard" parameterType="java.util.HashMap" resultMap="member_rm">
  SELECT PROFILE_IMG, MEMBER_NICKNAME,
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
	TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
	(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
	(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
	,MEMBER_LEVEL_NO
	,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
	,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
	,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
	,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
	,NVL(BOARD_COUNT,0) BOARD_COUNT
	,NVL(COMMENT_COUNT,0) COMMENT_COUNT
	FROM "MEMBER" m 
	LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
	FROM LOGIN_HISTORY lh
	GROUP BY MEMBER_NO
	ORDER BY 2) USING(MEMBER_NO)
		LEFT JOIN (SELECT NVL(BOARD_COUNT,0) BOARD_COUNT,MEMBER_NO FROM "MEMBER" m
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	<if test ="periodOption == 1">
		WHERE to_char(B_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
	</if>
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO))
	USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
	FROM "COMMENT" c 
	GROUP BY MEMBER_NO  
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE  MEMBER_DEL_FL IN ('N','Y')
	<if test ="aboveOption == 1">
		AND BOARD_COUNT <![CDATA[>=]]> #{articleCountInput}
	</if>
	<if test ="aboveOption == 0">
		AND BOARD_COUNT <![CDATA[<=]]> #{articleCountInput}
	</if>
		
	<if test ="memberLevelNo != 0">
		AND MEMBER_LEVEL_NO = #{memberLevelNo}
	</if>
	ORDER BY MEMBER_NICKNAME
  </select>
  
  <!-- 댓글 수로 상세조회111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111-->
  <select id="getselectDetailCommentCount" parameterType="java.util.HashMap" resultType="_int">
  SELECT COUNT(*) 
	FROM (SELECT COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
	FROM (SELECT NVL(COMMENT_COUNT,0) COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
	FROM "MEMBER" m
	LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
	FROM "COMMENT" c 
	<if test ="periodOption == 1">
		WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
	</if>
	GROUP BY MEMBER_NO  
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE MEMBER_DEL_FL IN ('N','S'))
	<where>
		<if test ="aboveOption == 1">
			COMMENT_COUNT <![CDATA[>=]]> #{commentCountInput}
		</if>
		<if test ="aboveOption == 0">
			COMMENT_COUNT <![CDATA[<=]]> #{commentCountInput}
		</if>
		<if test ="memberLevelNo != 0">
			AND MEMBER_LEVEL_NO = #{memberLevelNo}
		</if>
	</where>
	)
  </select>
  
  <select id="getselectDetailComment" parameterType="java.util.HashMap" resultMap="member_rm">
  SELECT *
	FROM 
	(SELECT PROFILE_IMG, MEMBER_NICKNAME,
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
	TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
	(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
	(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
	,MEMBER_LEVEL_NO
	,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
	,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
	,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
	,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
	,NVL(BOARD_COUNT,0) BOARD_COUNT
	,NVL(COMMENT_COUNT,0) COMMENT_COUNT
	FROM "MEMBER" m 
	LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
	FROM LOGIN_HISTORY lh
	GROUP BY MEMBER_NO
	ORDER BY 2) USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
	FROM "COMMENT" c 
	<if test ="periodOption == 1">
		WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
	</if>
	GROUP BY MEMBER_NO  
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE  MEMBER_DEL_FL IN ('N','Y')
	ORDER BY MEMBER_NICKNAME)
	<where>
		<if test ="aboveOption == 1">
			COMMENT_COUNT <![CDATA[>=]]> #{commentCountInput}
		</if>
		<if test ="aboveOption == 0">
			COMMENT_COUNT <![CDATA[<=]]> #{commentCountInput}
		</if>
		<if test ="memberLevelNo != 0">
			AND MEMBER_LEVEL_NO = #{memberLevelNo}
		</if>
	</where>
  </select>
  <!-- 댓글 수로 상세조회111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111-->
  <!-- 방문수 상세조회111111111111111111111111111111-->
  <select id="getselectDetailVisitCount" parameterType="java.util.HashMap" resultType="_int">
  SELECT COUNT(*) 
	FROM (SELECT *
	FROM (SELECT MAX(LOGIN_DATE) LOGIN_DATE ,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT,MEMBER_LEVEL_NO 
	FROM (SELECT *
	FROM "MEMBER"
	LEFT JOIN LOGIN_HISTORY
	USING(MEMBER_NO))
	WHERE MEMBER_DEL_FL IN ('N','S')
	<if test ="periodOption == 1">
		AND to_char(LOGIN_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
	</if>
	
	GROUP BY MEMBER_NO,MEMBER_LEVEL_NO 
	ORDER BY 2)
	<where>
		<if test ="aboveOption == 1">
			LOGHISTORY_COUNT <![CDATA[>=]]> #{visitCountInput}
		</if>
		<if test ="aboveOption == 0">
			LOGHISTORY_COUNT <![CDATA[<=]]> #{visitCountInput}
		</if>
		<if test ="memberLevelNo != 0">
			AND MEMBER_LEVEL_NO = #{memberLevelNo}
		</if>
	</where>
	)
  </select>
  <select id="getselectDetailVisit" parameterType="java.util.HashMap" resultMap="member_rm">
  SELECT *
	FROM (SELECT PROFILE_IMG, MEMBER_NICKNAME,
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
	TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
	(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
	(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
	,MEMBER_LEVEL_NO
	,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
	,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
	,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
	,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
	,NVL(BOARD_COUNT,0) BOARD_COUNT
	,NVL(COMMENT_COUNT,0) COMMENT_COUNT
	FROM "MEMBER" m 
	LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
	FROM LOGIN_HISTORY lh
	<if test ="periodOption == 1">
		WHERE to_char(LOGIN_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
	</if>
	GROUP BY MEMBER_NO
	ORDER BY 2) USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
	FROM "COMMENT" c 
	GROUP BY MEMBER_NO  
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE  MEMBER_DEL_FL IN ('N','Y')
	ORDER BY MEMBER_NICKNAME)
	<where>
		<if test ="aboveOption == 1">
			LOGHISTORY_COUNT <![CDATA[>=]]> #{visitCountInput}
		</if>
		<if test ="aboveOption == 0">
			LOGHISTORY_COUNT <![CDATA[<=]]> #{visitCountInput}
		</if>
		<if test ="memberLevelNo != 0">
				AND MEMBER_LEVEL_NO = #{memberLevelNo}
		</if>
	</where>
  </select>
  <!-- 방문수 상세조회111111111111111111111111111111-->
  <!-- 가입일 방문일로 상세조회111111111111111111111111111111111111111111111111111111111111111 -->
  			<!-- 가입일 방문일로 상세조회페이징 -->
  <select id="selectDetailDateCount" parameterType="java.util.HashMap" resultType="_int">
  SELECT COUNT(*) 
	FROM "MEMBER"
	LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
	FROM LOGIN_HISTORY lh
	GROUP BY MEMBER_NO) USING(MEMBER_NO)
	WHERE MEMBER_DEL_FL IN ('N','S')
	<if test ="entryType == 1">
	AND to_char(LOGIN_DATE,'yyyy-mm-dd') 
	BETWEEN to_char(TO_DATE(#{startDateInput}),'yyyy-mm-dd') AND to_char(TO_DATE(#{endDateInput}),'yyyy-mm-dd')
	</if>
	<if test ="entryType == 0">
	AND to_char(ENROLL_DATE,'yyyy-mm-dd') 
	BETWEEN to_char(TO_DATE(#{startDateInput}),'yyyy-mm-dd') AND to_char(TO_DATE(#{endDateInput}),'yyyy-mm-dd')
	</if>
	<if test ="memberLevelNo != 0">
		AND MEMBER_LEVEL_NO = #{memberLevelNo}
	</if>
	ORDER BY 1
  </select>
  <select id="selectDetailDate" parameterType="java.util.HashMap" resultMap="member_rm">
  SELECT PROFILE_IMG, MEMBER_NICKNAME,
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
	TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
	(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
	(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
	,MEMBER_LEVEL_NO
	,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
	,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
	,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
	,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
	,NVL(BOARD_COUNT,0) BOARD_COUNT
	,NVL(COMMENT_COUNT,0) COMMENT_COUNT
	FROM "MEMBER" m 
	LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
	FROM LOGIN_HISTORY lh
	GROUP BY MEMBER_NO
	ORDER BY 2) USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO)
	LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
	FROM "COMMENT" c 
	GROUP BY MEMBER_NO  
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE  MEMBER_DEL_FL IN ('N','Y')
	<if test ="entryType == 1">
	AND to_char(LOGIN_DATE,'yyyy-mm-dd') 
	BETWEEN to_char(TO_DATE(#{startDateInput}),'yyyy-mm-dd') AND to_char(TO_DATE(#{endDateInput}),'yyyy-mm-dd')
	</if>
	<if test ="entryType == 0">
	AND to_char(ENROLL_DATE,'yyyy-mm-dd') 
	BETWEEN to_char(TO_DATE(#{startDateInput}),'yyyy-mm-dd') AND to_char(TO_DATE(#{endDateInput}),'yyyy-mm-dd')
	</if>
	<if test ="memberLevelNo != 0">
		AND MEMBER_LEVEL_NO = #{memberLevelNo}
	</if>
	ORDER BY 2
  </select>
  <!-- 가입일 방문일로 상세조회11111111111111111111111111111111111111111111111111 -->
  <!-- 활동정지한 멤버  -->
  <select id="stopMemberCount" resultType="_int">
  	SELECT COUNT(*) FROM "MEMBER" m
	WHERE MEMBER_DEL_FL IN ('S')
  </select>
  <select id="selectStopMemberListCount" resultType="_int">
  	SELECT COUNT(*) FROM "MEMBER" m
	WHERE MEMBER_DEL_FL IN ('S')
	<if test ="memberEmail != null">
		AND SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = #{memberEmail}
	</if>
  </select>
  <select id="selectStopMemberList" resultMap="member_rm">
  	SELECT HOLD_NO, MEMBER_NO,PROFILE_IMG, 
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,MEMBER_NICKNAME ,TO_CHAR(HOLD_DATE ,'YYYY.MM.DD') HOLD_DATE 
	,HOLD_REASON
	,(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) FROM MEMBER_HOLD JOIN "MEMBER" ON(MEMBER_NO = H_MANAGER_NO)) H_MEMBER_EMAIL 
	,(SELECT MEMBER_NICKNAME FROM MEMBER_HOLD JOIN "MEMBER" ON(MEMBER_NO = H_MANAGER_NO)) H_MEMBER_NICKNAME 
	FROM "MEMBER" 
	JOIN MEMBER_HOLD ON (MEMBER_NO = H_MEMBER_NO)
	WHERE MEMBER_DEL_FL IN ('S')
	AND HOLD_FL IN ('Y')
	<if test ="memberEmail != null">
		AND SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = #{memberEmail}
	</if>
  </select>
  
  <!-- 활동정지한 멤버  -->

</mapper>

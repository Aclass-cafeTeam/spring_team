SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NO
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT,MEMBER_DEL_FL
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
WHERE BOARD_DEL_FL IN ('N')
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N')
AND AUTHORITY_NO IN (0,1)
ORDER BY AUTHORITY_NO DESC;

INSERT INTO LOGIN_HISTORY VALUES(SEQ_LOG_HISTORY_NO.NEXTVAL,DEFAULT,1);
SELECT * FROM LOGIN_HISTORY lh;

SELECT * FROM MEMBER_LEVEL ml;
SELECT * FROM AUTHORITY a ; 
SELECT * FROM "MEMBER" m;
SELECT * FROM BOARD b ;
SELECT * FROM "COMMENT" c ;

SELECT COUNT(*) FROM "MEMBER" m
WHERE MEMBER_DEL_FL IN ('S')
AND SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = ;

COMMIT;
INSERT 

SELECT * FROM "MEMBER" m
WHERE MEMBER_DEL_FL IN ('N')
AND SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 'user01';

SELECT HOLD_NO, MEMBER_NO,PROFILE_IMG, 
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,MEMBER_NICKNAME ,TO_CHAR(HOLD_DATE ,'YYYY.MM.DD') HOLD_DATE 
,HOLD_REASON
,(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) FROM MEMBER_HOLD sub JOIN "MEMBER" ON(MEMBER_NO = H_MANAGER_NO) WHERE sub.H_MANAGER_NO =mh.H_MANAGER_NO) H_MEMBER_EMAIL 
,(SELECT MEMBER_NICKNAME FROM MEMBER_HOLD sub JOIN "MEMBER" ON(MEMBER_NO = H_MANAGER_NO) WHERE sub.H_MANAGER_NO =mh.H_MANAGER_NO) H_MEMBER_NICKNAME 
FROM "MEMBER" 
JOIN MEMBER_HOLD mh ON (MEMBER_NO = H_MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('S')
AND HOLD_FL IN ('Y');
-----------------------------------------------------------------------
SELECT ms.S_MEMBER_NO 
,(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1)  FROM MEMBER_SECESSION sub JOIN "MEMBER" ON(MEMBER_NO = sub.S_MEMBER_NO) WHERE sub.S_MEMBER_NO =ms.S_MEMBER_NO) MEMBER_EMAIL 
,(SELECT MEMBER_NICKNAME FROM MEMBER_SECESSION sub JOIN "MEMBER" ON(MEMBER_NO = sub.S_MEMBER_NO) WHERE sub.S_MEMBER_NO =ms.S_MEMBER_NO) MEMBER_NICKNAME 
,SECESSION_REASON_INFO, TO_CHAR(SECESSION_DATE ,'YYYY.MM.DD. HH:mm') SECESSION_DATE  ,S_MANAGER_NO
,(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) FROM MEMBER_SECESSION sub JOIN "MEMBER" ON(MEMBER_NO = S_MANAGER_NO) WHERE sub.S_MEMBER_NO =ms.S_MEMBER_NO) S_MEMBER_EMAIL 
,(SELECT MEMBER_NICKNAME FROM MEMBER_SECESSION  sub JOIN "MEMBER" ON(MEMBER_NO = S_MANAGER_NO)WHERE sub.S_MEMBER_NO =ms.S_MEMBER_NO) S_MEMBER_NICKNAME 
,SECESSION_REASON
FROM MEMBER_SECESSION ms 
LEFT JOIN "MEMBER" m ON(MEMBER_NO = S_MEMBER_NO)
WHERE S_MANAGER_NO IS NOT NULL;

SELECT SEQ_SECESSION_NO.CURRVAL FROM DUAL;
SELECT SEQ_SECESSION_NO.NEXTVAL FROM DUAL;
---------------------------------------------------------------------------
ALTER TABLE MEMBER_HOLD ADD HOLD_REASON VARCHAR2(150) DEFAULT NULL;

ALTER TABLE MEMBER_SECESSION MODIFY SECESSION_REASON_INFO VARCHAR2(150) DEFAULT NULL;

INSERT INTO MEMBER_SECESSION VALUES(5,SYSDATE,'I',80,4,DEFAULT);
INSERT INTO MEMBER_SECESSION VALUES(SEQ_SECESSION_NO.NEXTVAL,SYSDATE,'I',81,4,DEFAULT);
INSERT INTO MEMBER_HOLD VALUES(SEQ_HOLD_NO.NEXTVAL,76,4,SYSDATE,'Y',DEFAULT);
------------------------------------------------------------------------------------------------------------
--탈퇴멤버
SELECT ms.S_MEMBER_NO MEMBER_NO
,(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) FROM MEMBER_SECESSION sub JOIN "MEMBER" ON(MEMBER_NO = sub.S_MEMBER_NO) WHERE sub.S_MEMBER_NO =ms.S_MEMBER_NO) MEMBER_EMAIL 
,(SELECT MEMBER_NICKNAME FROM MEMBER_SECESSION sub JOIN "MEMBER" ON(MEMBER_NO = sub.S_MEMBER_NO) WHERE sub.S_MEMBER_NO =ms.S_MEMBER_NO) MEMBER_NICKNAME 
,SECESSION_REASON_INFO, TO_CHAR(SECESSION_DATE ,'YYYY.MM.DD. HH:mm') SECESSION_DATE  ,S_MANAGER_NO
,(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) FROM MEMBER_SECESSION sub JOIN "MEMBER" ON(MEMBER_NO = S_MANAGER_NO) WHERE sub.S_MEMBER_NO =ms.S_MEMBER_NO) S_MEMBER_EMAIL 
,(SELECT MEMBER_NICKNAME FROM MEMBER_SECESSION  sub JOIN "MEMBER" ON(MEMBER_NO = S_MANAGER_NO)WHERE sub.S_MEMBER_NO =ms.S_MEMBER_NO) S_MEMBER_NICKNAME 
,(CASE 
	WHEN SECESSION_REASON = 'F'
	THEN 'Y'  
	WHEN SECESSION_REASON = 'I'
	THEN 'N'
END) SECESSION_FL
FROM MEMBER_SECESSION ms 
LEFT JOIN "MEMBER" m ON(MEMBER_NO = S_MEMBER_NO)
WHERE S_MANAGER_NO IS NOT NULL
AND SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 'user01';

UPDATE "MEMBER_SECESSION" SET SECESSION_REASON_INFO = NULL WHERE SECESSION_NO =4; 

SELECT *
FROM MEMBER_SECESSION ms 
LEFT JOIN "MEMBER" m ON(MEMBER_NO = S_MEMBER_NO)
WHERE S_MANAGER_NO IS NOT NULL
AND SECESSION_REASON = 'F'
AND MEMBER_EMAIL = 'user00@never.com';
-------------------------------------------------------------------------------------------
SELECT *
FROM MEMBER_SECESSION ms 
LEFT JOIN "MEMBER" m ON(MEMBER_NO = S_MEMBER_NO)
WHERE S_MANAGER_NO IS NOT NULL;

(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) , sub.S_MEMBER_NO FROM MEMBER_SECESSION sub JOIN "MEMBER" ON(MEMBER_NO = sub.S_MEMBER_NO) WHERE sub.S_MEMBER_NO =6);

(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) FROM MEMBER_SECESSION JOIN "MEMBER" ON(MEMBER_NO = S_MEMBER_NO));

AND SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 'user01';

CREATE SEQUENCE SEQ_SECESSION_NO
INCREMENT BY 1
START WITH 1;

SELECT LOGIN_DATE,MEMBER_NO FROM "MEMBER" m
LEFT JOIN LOGIN_HISTORY USING(MEMBER_NO);

SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO,COUNT(LOGIN_DATE) LOGHISTORY_COUNT  
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO
ORDER BY 2;

SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2;


SELECT NVL(COUNT(COMMENT_NO),0) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
GROUP BY MEMBER_NO  
ORDER BY 2;

SELECT COUNT(*) FROM "MEMBER" m
WHERE MEMBER_DEL_FL IN ('N','Y');

INSERT INTO "MEMBER" VALUES(SEQ_MEMBER_NO.NEXTVAL,'user11@never.com','$2a$10$5QmOwkVwr3Ck87jdsIkdse00zhjAqfnApu7ogmEOP1boSa9e2Yvoe','유저십일',NULL,'/resources/images/main/철수2.png',SYSDATE,DEFAULT,2,2);
INSERT INTO "MEMBER" VALUES(SEQ_MEMBER_NO.NEXTVAL,'user12@never.com','$2a$10$5QmOwkVwr3Ck87jdsIkdse00zhjAqfnApu7ogmEOP1boSa9e2Yvoe','유저십이',NULL,'/resources/images/main/철수2.png',SYSDATE,DEFAULT,2,2);

---------------------
SELECT BOARD_COUNT,MEMBER_NO FROM "MEMBER" m
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
WHERE to_char(B_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S')
AND BOARD_COUNT >= 30
AND MEMBER_LEVEL_NO = 2;
---------------------
SELECT BOARD_COUNT,MEMBER_NO FROM "MEMBER" m
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S')
AND BOARD_COUNT >= 30
AND MEMBER_LEVEL_NO = 2;
-----------------------------
SELECT COUNT(*) FROM "MEMBER" m
	LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
	FROM BOARD b 
	<if test ="periodOption == 1">
	WHERE to_char(B_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
	</if>
	GROUP BY MEMBER_NO
	ORDER BY 2)
	USING(MEMBER_NO)
	WHERE MEMBER_DEL_FL IN ('N','S')
	<if test ="aboveOption == 1">
		<![CDATA[AND BOARD_COUNT >=]]> #{boardCount}
	</if>
	<if test ="aboveOption == 0">
		<![CDATA[AND BOARD_COUNT <=]]> #{boardCount}
	</if>
	<if test ="memberLevelNo != 0">
		AND MEMBER_LEVEL_NO = #{memberLevelNo}
	</if>
-----------------------------------
--게시글 수에 따라 
SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N','Y')
AND BOARD_COUNT >= 30
AND MEMBER_LEVEL_NO = 2
ORDER BY MEMBER_NICKNAME;
-----------------------------------------------------------
----------------게시글 수에 따라 최근 한달
SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b
<if test ="periodOption == 1">
WHERE to_char(B_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
</if>
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N','Y')
<where>
	<if test ="aboveOption == 1">
		BOARD_COUNT <![CDATA[>=]]> 0
	</if>
	<if test ="aboveOption == 0">
		BOARD_COUNT <![CDATA[<=]]> 0
	</if>
	
	<if test ="memberLevelNo != 0">
		AND MEMBER_LEVEL_NO = 2
	</if>
</where>
ORDER BY MEMBER_NICKNAME;

--AND BOARD_COUNT >= 30  --조건
--AND MEMBER_LEVEL_NO = 2   ---조건
---------------------------------
(SELECT BOARD_COUNT FROM "MEMBER" m
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S')
AND MEMBER_LEVEL_NO = 2) >= 30
-----------------------------------------------------------------------------
---------------------------------------------------------------
--댓글 수에 따라 멤버
SELECT COUNT(*) 
FROM (SELECT COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM (SELECT NVL(COMMENT_COUNT,0) COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM "MEMBER" m
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
<if test ="periodOption == 1">
	WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
</if>
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S'))
<where>
	<if test ="aboveOption == 1">
		COMMENT_COUNT <![CDATA[>=]]> 0
	</if>
	<if test ="aboveOption == 0">
		COMMENT_COUNT <![CDATA[<=]]> 0
	</if>
	
	<if test ="memberLevelNo != null">
		AND MEMBER_LEVEL_NO = 2)
	</if>
</where>

------------------------------------------------------
UPDATE "MEMBER" SET 
MEMBER_NICKNAME = '유저98님'
WHERE MEMBER_NO = 98;


UPDATE "MEMBER" SET 
MEMBER_LEVEL_NO = 2 
WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 'wldfbs7999'
AND AUTHORITY_NO NOT IN (0,1);
ROLLBACK;
SELECT *
FROM "MEMBER" m 
;
SELECT *
			FROM "MEMBER" 
			WHERE MEMBER_LEVEL_NO =  2 
			AND SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) IN 
			 (  'wldfbs3234' , 'wldbs00' , 'wldfbs' ) 
			AND AUTHORITY_NO NOT IN (0,1);

--------------------------------------------------
---------------------------------------------------------------
--댓글 수에 따라 멤버
SELECT COUNT(*) 
FROM (SELECT COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM (SELECT NVL(COMMENT_COUNT,0) COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM "MEMBER" m
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c
WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S'))
WHERE COMMENT_COUNT >=0
);
--memberLevelNo(234)     0이면 등급 따지지 않고 전체 멤버 조회!!!!!
--periodOption(0 전체 1 최신)
--articleCountInput (댓글수)    aboveOption(1 이상 0 이하 )
--AND MEMBER_LEVEL_NO = 2
--------------------------------------------------
----------------------------------------------------------------------------

--------------------------------------------------------------------------
---------------------------------------------------------------------------
SELECT *
FROM 
(SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
<if test ="periodOption == 1">
	WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
</if>
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N','Y')
ORDER BY MEMBER_NICKNAME)
<where>
	<if test ="aboveOption == 1">
		COMMENT_COUNT <![CDATA[>=]]> 0
	</if>
	<if test ="aboveOption == 0">
		COMMENT_COUNT <![CDATA[<=]]> 0
	</if>
	
	<if test ="memberLevelNo != null">
		AND MEMBER_LEVEL_NO = 2)
	</if>
</where>

--memberLevelNo(234)     0이면 등급 따지지 않고 전체 멤버 조회!!!!!
--periodOption(0 전체 1 최신)
--articleCountInput (댓글수)    aboveOption(1 이상 0 이하 )
--AND MEMBER_LEVEL_NO = 2
SELECT COUNT(*) 
FROM (SELECT COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM (SELECT NVL(COMMENT_COUNT,0) COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM "MEMBER" m
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
<if test ="periodOption == 1">
	WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
</if>
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S'))
<where>
	<if test ="aboveOption == 1">
		COMMENT_COUNT <![CDATA[>=]]> 0
	</if>
	<if test ="aboveOption == 0">
		COMMENT_COUNT <![CDATA[<=]]> 0
	</if>
	
	<if test ="memberLevelNo != null">
		AND MEMBER_LEVEL_NO = 2)
	</if>
</where>
-----------------------------------------------------
---------------------------------------------------------
---최근 한달
SELECT *
FROM 
(SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c
WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N','Y')
ORDER BY MEMBER_NICKNAME)
WHERE COMMENT_COUNT >= 0
AND MEMBER_LEVEL_NO = 2;
------------------------------------------------------------









SELECT COMMENT_COUNT, MEMBER_NO
FROM (SELECT COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM (SELECT NVL(COMMENT_COUNT,0) COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM "MEMBER" m
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c
WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S')));







AND COMMENT_COUNT >=0
AND MEMBER_LEVEL_NO = 2;
--------------------------------------------------
SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2;

SELECT BOARD_NO ,MEMBER_NO 
FROM BOARD b
WHERE to_char(B_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd');

SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
WHERE to_char(B_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO
ORDER BY 2;

------------------------------------------------------------------------------------------------
--방문 수 상세 조회!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
--하기 싫다 집에 가고 싶다아아아앙아아아아아아ㅏ아아아아아아아아아아아아아아아아ㅏㅇ
-------------------------------------------------------------------------------------------------------
--count로 감싸면 된다
SELECT *
FROM (SELECT MAX(LOGIN_DATE) LOGIN_DATE ,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT,MEMBER_LEVEL_NO 
FROM (SELECT *
FROM "MEMBER"
LEFT JOIN LOGIN_HISTORY
USING(MEMBER_NO))
GROUP BY MEMBER_NO,MEMBER_LEVEL_NO 
ORDER BY 2)
WHERE LOGHISTORY_COUNT >= 2
AND MEMBER_LEVEL_NO =2;
-----------
SELECT COUNT(*) 
FROM (SELECT *
FROM (SELECT MAX(LOGIN_DATE) LOGIN_DATE ,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT,MEMBER_LEVEL_NO 
FROM (SELECT *
FROM "MEMBER"
LEFT JOIN LOGIN_HISTORY
USING(MEMBER_NO))
GROUP BY MEMBER_NO,MEMBER_LEVEL_NO 
ORDER BY 2)
WHERE LOGHISTORY_COUNT >= 2
AND MEMBER_LEVEL_NO =2);
----------------------------------------------------------------------------------------------------------
--count로 감싸면 된다
SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT,MEMBER_LEVEL_NO 
FROM (SELECT *
FROM "MEMBER"
LEFT JOIN LOGIN_HISTORY
USING(MEMBER_NO))
GROUP BY MEMBER_NO,MEMBER_LEVEL_NO 
ORDER BY 2;
----------
SELECT * 
FROM (SELECT *
FROM (SELECT MAX(LOGIN_DATE) LOGIN_DATE ,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT,MEMBER_LEVEL_NO 
FROM (SELECT *
FROM "MEMBER"
LEFT JOIN LOGIN_HISTORY
USING(MEMBER_NO))
WHERE to_char(LOGIN_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO,MEMBER_LEVEL_NO 
ORDER BY 2)
WHERE LOGHISTORY_COUNT >= 2
AND MEMBER_LEVEL_NO =2);
------
SELECT COUNT(*) 
FROM (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT,MEMBER_LEVEL_NO 
FROM (SELECT *
FROM "MEMBER"
LEFT JOIN LOGIN_HISTORY
USING(MEMBER_NO))
WHERE to_char(LOGIN_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
AND MEMBER_DEL_FL IN ('N','S')
GROUP BY MEMBER_NO,MEMBER_LEVEL_NO 
ORDER BY 2);

<where>
		<if test ="aboveOption == 1">
			COMMENT_COUNT <![CDATA[>=]]> #{commentCountInput}
		</if>
		<if test ="aboveOption == 0">
			COMMENT_COUNT <![CDATA[<=]]> #{commentCountInput}
		</if>
		<if test ="memberLevelNo != 0">
			AND MEMBER_LEVEL_NO = #{memberLevelNo}
		</if>
</where>
------------------------------------------------------------------------------------------------------
--방문수 상세조회 페이징처리 
SELECT COUNT(*) 
FROM (SELECT *
FROM (SELECT MAX(LOGIN_DATE) LOGIN_DATE ,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT,MEMBER_LEVEL_NO 
FROM (SELECT *
FROM "MEMBER"
LEFT JOIN LOGIN_HISTORY
USING(MEMBER_NO))
<if test ="periodOption == 1">
	WHERE to_char(LOGIN_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
</if>
GROUP BY MEMBER_NO,MEMBER_LEVEL_NO 
ORDER BY 2)
<where>
	<if test ="aboveOption == 1">
		WHERE LOGHISTORY_COUNT >= 2
	</if>
	<if test ="aboveOption == 0">
		WHERE LOGHISTORY_COUNT <= 2
	</if>
	<if test ="memberLevelNo != 0">
			AND MEMBER_LEVEL_NO = #{memberLevelNo}
	</if>
</where>
)

------------------------------------------------------------------------------------------------------------
--방문수에 따른 상세조회
SELECT *
FROM (SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
WHERE to_char(LOGIN_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N','Y')
ORDER BY MEMBER_NICKNAME)
WHERE LOGHISTORY_COUNT >= 1
AND MEMBER_LEVEL_NO = 2;
------------------------------------------------------------------------
--가입일이나 최종 방문일에 따른 상세조회
SELECT * 
FROM "MEMBER"
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO) USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S')
AND to_char(LOGIN_DATE,'yyyy-mm-dd') 
BETWEEN to_char(TO_DATE('2022-11-20'),'yyyy-mm-dd') AND to_char(TO_DATE('2022-11-26'),'yyyy-mm-dd')
--AND to_char(ENROLL_DATE,'yyyy-mm-dd') 
--BETWEEN to_char(TO_DATE('2022-11-20'),'yyyy-mm-dd') AND to_char(TO_DATE('2022-11-26'),'yyyy-mm-dd')
ORDER BY 1;
--------------
SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N','Y')
AND MEMBER_LEVEL_NO = 2
AND to_char(LOGIN_DATE,'yyyy-mm-dd') 
BETWEEN to_char(TO_DATE('2022-11-20'),'yyyy-mm-dd') AND to_char(TO_DATE('2022-11-26'),'yyyy-mm-dd')
--AND to_char(ENROLL_DATE,'yyyy-mm-dd') 
--BETWEEN to_char(TO_DATE('2022-11-20'),'yyyy-mm-dd') AND to_char(TO_DATE('2022-11-26'),'yyyy-mm-dd')
ORDER BY MEMBER_NICKNAME;
--------------------------------------------------------------------------------------------------------
--마이바티스 조건문
SELECT *
FROM (SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
<if test ="periodOption == 1">
	WHERE to_char(LOGIN_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
</if>
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c 
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N','Y')
ORDER BY MEMBER_NICKNAME)
<where>
	<if test ="aboveOption == 1">
		LOGHISTORY_COUNT >= 1
	</if>
	<if test ="aboveOption == 0">
		LOGHISTORY_COUNT <= 1
	</if>
	<if test ="memberLevelNo != 0">
		AND MEMBER_LEVEL_NO = #{memberLevelNo}
	</if>
</where>


------------------------------------------
<where>
	<if test ="aboveOption == 1">
		WHERE LOGHISTORY_COUNT >= 2
	</if>
	<if test ="aboveOption == 0">
		WHERE LOGHISTORY_COUNT <= 2
	</if>
	<if test ="memberLevelNo != 0">
			AND MEMBER_LEVEL_NO = #{memberLevelNo}
	</if>
</where>

















SELECT *
FROM "MEMBER"
LEFT JOIN LOGIN_HISTORY
USING(MEMBER_NO);

SELECT COUNT(*) 
FROM (SELECT COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM (SELECT NVL(COMMENT_COUNT,0) COMMENT_COUNT, MEMBER_NO ,MEMBER_LEVEL_NO
FROM "MEMBER" m
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c
WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S'))
WHERE COMMENT_COUNT >=0
);




SELECT *
FROM 
(SELECT PROFILE_IMG, MEMBER_NICKNAME,
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,
TO_CHAR(ENROLL_DATE ,'YYYY.MM.DD') ENROLL_DATE, 
(SELECT MEMBER_LEVEL_IMG FROM MEMBER_LEVEL ml WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_IMG,
(SELECT MEMBER_LEVEL_NAME FROM MEMBER_LEVEL ml  WHERE ml.MEMBER_LEVEL_NO = m.MEMBER_LEVEL_NO) MEMBER_LEVEL_NAME
,MEMBER_LEVEL_NO
,(SELECT AUTHORITY_IMG FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_IMG
,(SELECT AUTHORITY_NAME FROM AUTHORITY a  WHERE a.AUTHORITY_NO = m.AUTHORITY_NO) AUTHORITY_NAME
,TO_CHAR(LOGIN_DATE ,'YYYY.MM.DD') LOGIN_DATE
,NVL(LOGHISTORY_COUNT,0) LOGHISTORY_COUNT
,NVL(BOARD_COUNT,0) BOARD_COUNT
,NVL(COMMENT_COUNT,0) COMMENT_COUNT
FROM "MEMBER" m 
LEFT JOIN (SELECT MAX(LOGIN_DATE) LOGIN_DATE,MEMBER_NO ,COUNT(LOGIN_DATE) LOGHISTORY_COUNT 
FROM LOGIN_HISTORY lh
GROUP BY MEMBER_NO
ORDER BY 2) USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
LEFT JOIN (SELECT COUNT(COMMENT_NO) COMMENT_COUNT,MEMBER_NO 
FROM "COMMENT" c
WHERE to_char(C_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO  
ORDER BY 2)
USING(MEMBER_NO)
WHERE  MEMBER_DEL_FL IN ('N','Y')
ORDER BY MEMBER_NICKNAME)
WHERE COMMENT_COUNT >= 0
AND MEMBER_LEVEL_NO = 2;



-----------------------------------------------------------------------
--INSERT 회원 활동정지하는 데 MEMBER_HOLD 테이블 삽입하고 
--"MEMBER" MEMBER_DEL_FL을 'S'로 변경 시켜줘야함 --- S가 활동정지 여부를 알려주는 코드
------------------------------------------------------------------------
--활동정지 해제 할때는 어떻게 할건지 삭제를 해버릴건지 아니면 
--??
INSERT INTO MEMBER_HOLD
VALUES(SEQ_HOLD_NO.NEXTVAL,72,
   3,SYSDATE ,DEFAULT , '바람직하지 않은 활동(광고, 도배, 욕설, 비방 등)' );
----------------------------------------------
INSERT INTO MEMBER_HOLD   
	SELECT SEQ_HOLD_NO.NEXTVAL, 
  	H.* 
 	, 매니저 번호 ,SYSDATE ,'Y' ,'바람직하지 않은 활동(광고, 도배, 욕설, 비방 등)' 
 	FROM (SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 회원이메일
 			UNION ALL 
 		  SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 회원이메일
 		) H;
-----------------------------------------------
UPDATE "MEMBER" SET 
MEMBER_DEL_FL = 'S'
WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) IN 회원이메일;

ALTER SEQUENCE SEQ_HOLD_NO INCREMENT BY 1;
SELECT SEQ_HOLD_NO.CURRVAL FROM DUAL;
SELECT SEQ_HOLD_NO.NEXTVAL FROM DUAL;
--------------
<insert id="insertBoardImageList" parameterType ="list">
  INSERT INTO BOARD_IMG
	SELECT SEQ_IMG_NO.NEXTVAL IMG_NO, A.*
	FROM 
	<foreach collection="list" item="img" open="(" close=") A" separator="UNION ALL">
		SELECT 
				#{img.imagePath} IMG_PATH,
				#{img.imageReName} IMG_RENAME,
				#{img.imageOriginal} IMG_ORIGINAL,
				#{img.imageOrder} IMG_ORDER,
				#{img.boardNo} BOARD_NO
		FROM DUAL
	</foreach>
</insert>;
----------------------------------------
  INSERT INTO BOARD_IMG
	SELECT SEQ_IMG_NO.NEXTVAL IMG_NO, A.*
	FROM 
	( 
		SELECT 
				#{img.imagePath} IMG_PATH,
				#{img.imageReName} IMG_RENAME,
				#{img.imageOriginal} IMG_ORIGINAL,
				#{img.imageOrder} IMG_ORDER,
				#{img.boardNo} BOARD_NO
		FROM DUAL
		UNION ALL
		SELECT 
				#{img.imagePath} IMG_PATH,
				#{img.imageReName} IMG_RENAME,
				#{img.imageOriginal} IMG_ORIGINAL,
				#{img.imageOrder} IMG_ORDER,
				#{img.boardNo} BOARD_NO
		FROM DUAL

	) A;
---------------------------------------------------------------------
SELECT HOLD_NO, MEMBER_NO,PROFILE_IMG, 
	SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL,MEMBER_NICKNAME ,TO_CHAR(HOLD_DATE ,'YYYY.MM.DD') HOLD_DATE 
	,HOLD_REASON
	,(SELECT SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) FROM MEMBER_HOLD sub JOIN "MEMBER" ON(MEMBER_NO = H_MANAGER_NO) WHERE sub.H_MEMBER_NO =mh.H_MEMBER_NO) H_MEMBER_EMAIL 
	,(SELECT MEMBER_NICKNAME FROM MEMBER_HOLD sub JOIN "MEMBER" ON(MEMBER_NO = H_MANAGER_NO) WHERE sub.H_MEMBER_NO =mh.H_MEMBER_NO) H_MEMBER_NICKNAME 
	FROM "MEMBER" 
	JOIN MEMBER_HOLD mh ON (MEMBER_NO = H_MEMBER_NO)
	WHERE MEMBER_DEL_FL IN ('S')
	AND HOLD_FL IN ('Y');

-----------------------------------------------------------------------------
--강제 탈퇴 멤버
--INSERT 회원 강제 탈퇴 시 MEMBER_SECESSION 테이블 삽입하고 
--"MEMBER" MEMBER_DEL_FL을 'Y'로 변경 시켜줘야함 --- S가 활동정지 여부를 알려주는 코드
INSERT INTO MEMBER_HOLD
VALUES(SEQ_HOLD_NO.NEXTVAL, (SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 회원이메일 ),
   로그인한 매니저 회원 번호,SYSDATE ,DEFAULT , 들고온 메세지);
----------------------------------------------
INSERT INTO MEMBER_SECESSION   
	SELECT SEQ_SECESSION_NO.NEXTVAL, 
  	SYSDATE , 강제탈퇴 당했을 때 재가입 I 불가 F ,
 	, S.* , 매니저 번호 , 이유 
 	FROM (SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 회원이메일
 			UNION ALL 
 		  SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 회원이메일
 		) S;
-----------------------------------------------
UPDATE "MEMBER" SET 
MEMBER_DEL_FL = 'Y'
WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) IN 회원이메일
AND AUTHORITY_NO NOT IN (0);


DELETE FROM MEMBER_HOLD WHERE HOLD_NO = 5;
-------------------------------------------------------
INSERT INTO MEMBER_SECESSION   
SELECT SEQ_SECESSION_NO.NEXTVAL, 
SYSDATE , 'I' ,
 		, S.* , 4 , '우리 카페 내 자체 운영 원칙에 위배되는 활동' 
		 	FROM
			 (  
					SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = 'wldbs00'
			 ) S

			 
DELETE FROM MEMBER_HOLD 
WHERE (SELECT MEMBER_NO FROM "MEMBER" WHERE 
SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) IN 회원이메일)
------------------------------------------------
--강제탈퇴 당한 멤버에서 재 가입 가능하게
UPDATE "MEMBER_SECESSION" SET 
SECESSION_REASON = 'I'
WHERE MEMBER_NO IN (SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) IN 회원이메일)
AND S_MANAGER_NO NOT NOT;


UPDATE "MEMBER_SECESSION" SET 
SECESSION_REASON = 'I'
WHERE S_MEMBER_NO IN (SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) IN ('user00','user54','user01'))
AND S_MANAGER_NO IS NOT NULL;

SELECT MEMBER_NO FROM "MEMBER" WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) IN ('user00','user54','user01');


SELECT COUNT(*) FROM "MEMBER" WHERE AUTHORITY_NO IN (0,1);

UPDATE "MEMBER" SET
  MEMBER_LEVEL_NO = 1,
  AUTHORITY_NO = 1
  WHERE SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) = #{electedStaffId};
--------------------------------------------------------------------------------------------
--가입등급 가져오기
SELECT * FROM MEMBER_LEVEL WHERE MEMBER_LEVEL_NO > 1;


-----------------------------------------------------------------------------------------------------------
--게시판 종류별로 대분류랑 다 묶어서 들고 오기
--순서에 맞게 들고 와야함
SELECT * FROM BOARD_TYPE JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO) 
WHERE CATEGORY_DEL_FL = 'N' AND TYPE_DEL_FL = 'N'
ORDER BY MAIN_CATEGORY_NO, BOARD_ORDER;



--대분류  
SELECT * FROM MAIN_CATEGORY WHERE CATEGORY_DEL_FL = 'N';
----------------------------------------------------------
--시퀀스 되돌리기
SELECT SEQ_BOARD_CODE.NEXTVAL FROM DUAL;
ALTER SEQUENCE SEQ_BOARD_CODE INCREMENT BY -21;
ALTER SEQUENCE SEQ_BOARD_CODE INCREMENT BY 1;
--------------------------------------------------
SELECT SEQ_MAIN_CATEGORY_NO.NEXTVAL FROM DUAL;
ALTER SEQUENCE SEQ_MAIN_CATEGORY_NO INCREMENT BY -9;
ALTER SEQUENCE SEQ_MAIN_CATEGORY_NO INCREMENT BY 1;

SELECT SEQ_MAIN_CATEGORY_NO.CURRVAL FROM DUAL;
-------------------------------------
INSERT INTO "MAIN_CATEGORY"
VALUES(SEQ_BOARD_1STCLASS_NO.NEXTVAL,#{mainCategoryNameAdd},DEFAULT);

SELECT * FROM "MAIN_CATEGORY" 
WHERE MAIN_CATEGORY_NO = (SELECT MAX(MAIN_CATEGORY_NO) FROM "MAIN_CATEGORY");

SELECT SEQ_BOARD_1STCLASS_NO.NEXTVAL FROM DUAL;

CREATE SEQUENCE SEQ_MEMBER_NO NOCACHE; -- 회원 번호
-----------------------------------------------------------------------
--게시판 카테고리 상세수정
--게시판 수정
UPDATE "BOARD_TYPE" SET 
<if test="boardName != null">
BOARD_NAME = #{boardName},  
</if>
TITLE_TAG_YN = #{},
BOARD_LIKE_YN = #{},
MEMBER_LEVEL_NO = #{},
WHERE BOARD_CODE = #{};
--카테고리 수정
UPDATE "MAIN_CATEGORY" SET 
MAIN_CATEGORY_NAME = #{}
WHERE MAIN_CATEGORY_NO = #{};

---카테고리 삭제 
UPDATE "MAIN_CATEGORY" SET 
CATEGORY_DEL_FL = 'Y'
WHERE MAIN_CATEGORY_NO = 5;
--카테고리 안에 있는 게시판 삭제
UPDATE "BOARD_TYPE" SET 
TYPE_DEL_FL = 'Y'
WHERE MAIN_CATEGORY_NO = 5;
--메인 카테고리 삭제 시 안에 게시판 삭제하고 그 게시판들 안에 게시글 삭제 추가
UPDATE "BOARD" SET
BOARD_DEL_FL ='M'
WHERE BOARD_NO IN (SELECT BOARD_NO  FROM (SELECT * FROM BOARD 
JOIN (SELECT * FROM BOARD_TYPE JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO))
USING(BOARD_CODE)) WHERE MAIN_CATEGORY_NO = #{});
----
SELECT *FROM BOARD b ;






--게시판 삭제
UPDATE "BOARD_TYPE" SET 
TYPE_DEL_FL = 'Y'
WHERE BOARD_CODE = #{};
-----게시판 삭제 시 게시글 삭제   추가
UPDATE "BOARD" SET
BOARD_DEL_FL ='M'
WHERE BOARD_CODE = #{};





SELECT * FROM BOARD 
JOIN (SELECT * FROM BOARD_TYPE JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO))
USING(BOARD_CODE);





(SELECT * FROM BOARD_TYPE JOIN MAIN_CATEGORY USING(MAIN_CATEGORY_NO));
----------------------------
SELECT COUNT(*)
FROM 
(SELECT NVL(BOARD_COUNT,0) BOARD_COUNT,MEMBER_NO,MEMBER_LEVEL_NO FROM "MEMBER" m
LEFT JOIN 
(SELECT COUNT(BOARD_NO) BOARD_COUNT ,MEMBER_NO 
FROM BOARD b 
WHERE BOARD_DEL_FL IN ('N')
AND to_char(B_CREATE_DATE,'yyyy.mm.dd') BETWEEN to_char(add_months(sysdate,-1),'yyyy.mm.dd') AND to_char(SYSDATE,'yyyy.mm.dd')
GROUP BY MEMBER_NO
ORDER BY 2)
USING(MEMBER_NO)
WHERE MEMBER_DEL_FL IN ('N','S'));
	<where>
		<if test ="aboveOption == 1">
			<![CDATA[AND BOARD_COUNT >=]]> #{articleCountInput}
		</if>
		<if test ="aboveOption == 0">
			<![CDATA[AND BOARD_COUNT <=]]> #{articleCountInput}
		</if>
		<if test ="memberLevelNo != 0">
			AND MEMBER_LEVEL_NO = #{memberLevelNo}


SELECT * FROM (SELECT BOARD_CODE,MEMBER_NO,BOARD_DEL_FL,B_DELETE_DATE,BOARD_CONTENT,BOARD_TITLE,BOARD_NO, to_char(B_CREATE_DATE,'yyyy.mm.dd') B_CREATE_DATE FROM "BOARD") 
JOIN "BOARD_TYPE" USING(BOARD_CODE)
JOIN (SELECT MEMBER_NO, MEMBER_NICKNAME,SUBSTR(MEMBER_EMAIL, 0, INSTR(MEMBER_EMAIL, '@')-1) MEMBER_EMAIL FROM  "MEMBER") USING(MEMBER_NO)
JOIN MEMBER_LEVEL USING(MEMBER_LEVEL_NO)
WHERE BOARD_DEL_FL = 'M';

MEMBER_LEVEL_NAME


